@using Atut.Helpers;
@using Atut.ViewModels

@model Atut.ViewModels.JourneyViewModel

@if (!ViewData.ModelState.IsValid)
{
    <div asp-validation-summary="All" class="callout callout-danger"></div>
}

<div class="box box-primary" id="JourneyEdit">
    <div class="box-header with-border">
        <h3 class="box-title">Dane trasy</h3>
    </div>
    <form ref="form" class="form-horizontal" method="post" role="form" v-on:submit.prevent="validateBeforeSubmit">
        <div class="box-body">
            <div class="form-group">
                <label for="StartingPlace" class="col-sm-2 control-label">Miejsce wsiadania</label>

                <div class="col-sm-10">
                    <input id="StartingPlace" v-model="startingPlace" name="StartingPlace" data-vv-as="Miejsce wsiadania" data-vv-name="startingPlace" v-validate="'required'" type="text" class="form-control" placeholder="Miejsce wsiadania">
                    <span v-show="errors.has('startingPlace')" class="text-danger">{{ errors.first('startingPlace') }}</span>
                </div>
            </div>
            <div class="form-group">
                <label for="ThroughPlace" class="col-sm-2 control-label">Miejsce pośrednie</label>

                <div class="col-sm-10">
                    <input id="ThroughPlace" v-model="throughPlace" name="ThroughPlace" data-vv-as="Miejsce pośrednie" data-vv-name="throughPlace" v-validate="'required'" type="text" class="form-control" placeholder="Miejsce pośrednie">
                    <span v-show="errors.has('throughPlace')" class="text-danger">{{ errors.first('throughPlace') }}</span>
                </div>
            </div>
            <div class="form-group">
                <label for="FinalPlace" class="col-sm-2 control-label">Miejsce końcowe</label>

                <div class="col-sm-10">
                    <input id="FinalPlace" v-model="finalPlace" name="FinalPlace" data-vv-as="Miejsce końcowe" data-vv-name="finalPlace" v-validate="'required'" type="text" class="form-control" placeholder="Miejsce końcowe">
                    <span v-show="errors.has('finalPlace')" class="text-danger">{{ errors.first('finalPlace') }}</span>
                </div>
            </div>
            <div class="form-group">
                <label for="AmountOfPeople" class="col-sm-2 control-label">Ilość osób</label>

                <div class="col-sm-10">
                    <input id="AmountOfPeople" v-model="amountOfPeople" name="AmountOfPeople" data-vv-as="Ilość osób" data-vv-name="amountOfPeople" v-validate="'required|min_value:1'" type="number" class="form-control">
                    <span v-show="errors.has('amountOfPeople')" class="text-danger">{{ errors.first('amountOfPeople') }}</span>
                </div>
            </div>
            <div class="form-group">
                <label for="StartDate" class="col-sm-2 control-label">Data wyjazdu</label>

                <div class="col-sm-10">
                    <datepicker v-validate="'required'" data-vv-value-path="formattedValue" v-model="startDate" data-vv-as="Data wyjazdu" data-vv-name="startDate" ref="startDate" language="pl"></datepicker>
                    <input type="hidden" name="StartDate" :value="startDateDisplayModel" />
                    <span v-show="errors.has('startDate')" class="text-danger">{{ errors.first('startDate') }}</span>
                </div>
            </div>
            <div class="form-group">
                <label for="EndDate" class="col-sm-2 control-label">Data powrotu</label>

                <div class="col-sm-10">
                    <datepicker v-validate="'required'" data-vv-value-path="formattedValue" v-model="endDate" data-vv-as="Data powrotu" data-vv-name="endDate" ref="endDate" language="pl"></datepicker>
                    <input type="hidden" name="EndDate" :value="endDateDisplayModel" />
                    <span v-show="errors.has('endDate')" class="text-danger">{{ errors.first('endDate') }}</span>
                </div>
            </div>

            <div class="form-group">
                <label for="TotalDistance" class="col-sm-2 control-label">Całkowita długość [km]</label>

                <div class="col-sm-10">
                    <input id="TotalDistance" v-model="totalDistance" name="TotalDistance" data-vv-as="Całkowita długość" data-vv-name="totalDistance" v-validate="'required|min_value:1'" type="number" class="form-control">
                    <span v-show="errors.has('totalDistance')" class="text-danger">{{ errors.first('totalDistance') }}</span>
                </div>
            </div>
            
            <div class="form-group">
                <label for="Countries" class="col-sm-2 control-label">Kraje</label>

                <div class="col-sm-10">
                    <countries-editor :items="countries"></countries-editor>
                    <div v-for="(country, index) in countries">
                        <input type="hidden" :name="'Countries[' + index + '].Name'" :value="country.name" />
                        <input type="hidden" :name="'Countries[' + index + '].Distance'" :value="country.distance" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="OtherCountriesTotalDistance" class="col-sm-2 control-label">Dystans przebyty w innych krajach [km]</label>

                <div class="col-sm-10">
                    <p class="form-control-static">{{ otherCountriesTotalDistance }}</p>
                    <input type="hidden" name="OtherCountriesTotalDistance" :value="otherCountriesTotalDistance" />
                </div>
            </div>
            
                <div v-for="(vehicle, index) in vehicles">
                    <input type="hidden" :name="'Vehicles[' + index + '].Id'" :value="vehicle.id" />
                    <input type="hidden" :name="'Vehicles[' + index + '].Value'" :value="vehicle.value" />
                </div>
        </div>

        <!-- /.box-body -->
        <div class="box-footer">
            <a href="@Url.Action("Index")" class="btn btn-default">Anuluj</a>
            <button type="submit" class="btn btn-primary pull-right">Zapisz</button>
        </div>
        <!-- /.box-footer -->
    </form>
</div>

<script  type="text/x-template" id="countries-editor-template">
    <div>
        <v-client-table :data="items" :columns="columns" :options="options">
            <template slot="actions" scope="props">
                <div>
                    <a v-on:click="remove(props.row.name)" class="btn btn-danger">Usuń</a>
                </div>
            </template>
        </v-client-table>

        <div class="form-group">
            <label class="col-sm-2 control-label">Nazwa kraju</label>

            <div class="col-sm-10">
                <select v-model="nameToAdd" class="form-control">
                    <option v-for="country in availableCountryNames">{{ country }}</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Dystans [km]</label>

            <div class="col-sm-10">
                <input v-model="distanceToAdd" type="number"  class="form-control"/>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label"></label>

            <div class="col-sm-10">
                <button type="button" class="btn btn-success" v-on:click="add">Dodaj</button>
                <span v-show="showError" class="text-danger">Uzupełnij poprawnie Kraj oraz Dystans</span>
            </div>
        </div>
    </div>
</script>